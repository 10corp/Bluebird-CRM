<?php
function nyss_contact_civicrm_buildForm( $formName, &$form ) {
  //CRM_Core_Error::debug_var('form',$form);
  //CRM_Core_Error::debug_var('$formName',$formName);

  if ( $formName == 'CRM_Contact_Form_Inline_Demographics' ) {
    $defaults = array();
    $contactID = $form->_contactId;
    $form->assign('cid', $contactID);

    //religion
    $form->addElement('text', 'custom_63', ts('Religion'), $attributes['common'], 'size="30"');
    $religion = civicrm_api('contact', 'getvalue', array(
      'version' => 3,
      'id' => $contactID,
      'return' => 'custom_63',
    ));
    $defaults['custom_63'] = $religion;

    //gender other
    $form->addElement('text', 'custom_45', ts('Other Gender'), $attributes['common'], 'size="30"');
    $genderother = civicrm_api('contact', 'getvalue', array(
      'version' => 3,
      'id' => $contactID,
      'return' => 'custom_45',
    ));
    $defaults['custom_45'] = $genderother;

    //ethnicity
    $ethOpts = _getFldOpts(58);
    $form->add('select', 'custom_58', ts('Ethnicity'), $ethOpts, FALSE,
      array('id' => 'ethnicity', 'multiple' => 'multiple', 'title' => '- select -')
    );
    $ethnicity = civicrm_api('contact', 'getvalue', array(
      'version' => 3,
      'id' => $contactID,
      'return' => 'custom_58',
    ));
    $defaults['custom_58'] = $ethnicity;

    $form->addElement('text', 'custom_62', ts('Other Ethnicity'), $attributes['common'], 'size="30"');
    $ethnicityother = civicrm_api('contact', 'getvalue', array(
      'version' => 3,
      'id' => $contactID,
      'return' => 'custom_62',
    ));
    $defaults['custom_62'] = $ethnicityother;

    $form->setDefaults($defaults);
  }

  if ( $formName == 'CRM_Contact_Form_Inline_CommunicationPreferences' ) {
    $defaults = array();
    $contactID = $form->_contactId;
    $form->assign('cid', $contactID);

    //5784 add privacy option note
    $form->addElement('textarea',
      'custom_64',
      ts('Privacy Option Notes'),
      array(
        'cols' => '40',
        'rows' => '3',
        'id' => 'custom_64',
        'style' => 'width: 225px;'
      )
    );
    $privacyNote = civicrm_api('contact', 'getvalue', array(
      'version' => 3,
      'id' => $contactID,
      'return' => 'custom_64',
    ));
    $defaults['custom_64'] = $privacyNote;

    $form->setDefaults($defaults);
  }

  if ( $formName == 'CRM_Contact_Form_Inline_ContactInfo' ) {
    $defaults = array();
    $contactID = $form->_contactId;
    $form->assign('cid', $contactID);

    //contact source
    $sourceOpts = _getFldOpts(60);
    $form->add('select', 'custom_60', ts('Ethnicity'), $sourceOpts, FALSE,
      array('id' => 'contact_source', 'title' => '- select -')
    );
    $contactSource = civicrm_api('contact', 'getvalue', array(
      'version' => 3,
      'id' => $contactID,
      'return' => 'custom_60',
    ));
    $defaults['custom_60'] = $contactSource;

    $indivCatOpts = _getFldOpts(42);
    $form->add('select', 'custom_42', ts('Individual Category'), $indivCatOpts, FALSE,
      array('id' => 'indiv_category', 'title' => '- select -')
    );
    $indivCat = civicrm_api('contact', 'getvalue', array(
      'version' => 3,
      'id' => $contactID,
      'return' => 'custom_42',
    ));
    $defaults['custom_42'] = $indivCat;

    $form->setDefaults($defaults);
  }

  //address edits
  if ( $formName == 'CRM_Contact_Form_Contact' ||
    $formName == 'CRM_Contact_Form_Inline_Address' ) {

    //set US/New York as defaults
    //we could potentially have as many as 6 addresses, so set for all
    $i = 1;
    while ( $i <= 6 ) {
      if ( empty( $form->_defaultValues['address'][$i]['country_id'] ) )
        $defaults['address'][$i]['country_id'] = 1228;
      if ( empty( $form->_defaultValues['address'][$i]['state_province_id'] ) )
        $defaults['address'][$i]['state_province_id'] = 1031;
      $i++;
    }
    $form->setDefaults( $defaults );
  }

  //contact form edits
  if ( $formName == 'CRM_Contact_Form_Contact' ) {
    //3527 add js action to deceased field
    if ( isset( $form->_elementIndex['is_deceased'] ) ) {
      $deceased =& $form->getElement( 'is_deceased' );
      $js = "showDeceasedDate();processDeceased();";
      $deceased->_attributes['onclick'] = $js;
    } //end deceased

    //3530 tweak js to place cursor at end of http in website field (IE8)
    if ( isset( $form->_elementIndex['website[1][url]'] ) ) {
      $website =& $form->getElement( 'website[1][url]' );
      $js = "if(!this.value) {
        this.value='http://';
        if (this.createTextRange) {
          var FieldRange = this.createTextRange();
          FieldRange.moveStart('character', this.value.length);
          FieldRange.collapse();
          FieldRange.select();
        }
      } else { return false; }";
      $website->_attributes['onfocus'] = $js;
    }

    //NYSS 4407 remove bulk email from privacy list as it is a separate element
    if ( isset( $form->_elementIndex['privacy'] ) ) {
      $privacy =& $form->getElement( 'privacy' );
      foreach ( $privacy->_elements as $key=>$option ) {
        if ( $option->_attributes['name'] == 'is_opt_out' ) {
          unset($privacy->_elements[$key]);
        }
      }
    }
  }
}//buildForm

function nyss_contact_civicrm_pageRun( &$page ) {
  $pagename = $page->getVar( '_name' );

  $contactPages = array(
    'CRM_Contact_Page_View_Summary',
    'CRM_Contact_Page_Inline_Demographics',
    'CRM_Contact_Page_Inline_CommunicationPreferences',
    'CRM_Contact_Page_Inline_ContactInfo',
  );
  if ( in_array($pagename, $contactPages) ) {
    _getContactCustom($page);
  }

  //5412
  if ( $pagename == 'CRM_Contact_Page_Inline_Address' ) {
    $smarty = CRM_Core_Smarty::singleton();
    if ( $smarty->get_template_vars('privacy') === NULL ) {
      $cid = $smarty->get_template_vars('contactId');
      $contact = civicrm_api('contact', 'getsingle', array('version' => 3, 'id' => $cid));
      //CRM_Core_Error::debug_var('contact', $contact);

      $privacy = array();
      foreach ( $contact as $f => $v ) {
        if ( strpos($f, 'do_not_') !== FALSE || $f == 'is_opt_out' ) {
          $privacy[$f] = $v;
        }
      }
      //CRM_Core_Error::debug_var('$privacy', $privacy);
      $page->assign('privacy', $privacy);
    }
  }
}//pageRun

function nyss_contact_civicrm_validateForm( $formName, &$fields, &$files, &$form, &$errors ) {
  //CRM_Core_Error::debug_var('formName',$formName);
  //CRM_Core_Error::debug_var('fields',$fields);
  //CRM_Core_Error::debug_var('files',$files);

  if ( $formName == 'CRM_Contact_Form_Inline_CustomData' ||
       $formName == 'CRM_Contact_Form_Contact' ) {
    //5776
    foreach ( $files as $field => $details ) {
      if ( $details['size'] > 2100000 ) { //2MB
        $errors[$field] = 'Attached files must be less than 2MB in size.';
      }
    }
  }
}

function nyss_contact_civicrm_postProcess( $formName, &$form ) {
  //CRM_Core_Error::debug_var('$formName',$formName);
  if ( $formName == 'CRM_Contact_Form_Inline_Demographics' ) {
    $vals = $form->_submitValues;

    _setCustomData('CRM_Contact_Form_Inline_Demographics', $vals);

    //6803 set comm pref when deceased
    if ( isset($vals['is_deceased']) && $vals['is_deceased'] ) {
      civicrm_api('contact', 'create', array(
        'version' => 3,
        'id' => $vals['cid'],
        'do_not_email' => 1,
        'do_not_phone' => 1,
        'do_not_mail' => 1,
        'do_not_sms' => 1,
        'do_not_trade' => 1,
        'is_opt_out' => 1,
        'preferred_communication_method' => '',
      ));
    }
  }

  if ( in_array($formName, array(
    'CRM_Contact_Form_Inline_CommunicationPreferences',
    'CRM_Contact_Form_Inline_ContactInfo'
  )) ) {
    _setCustomData($formName, $form->_submitValues);
  }
}

function nyss_contact_civicrm_tabs( &$tabs, $contactID ) {
  //CRM_Core_Error::debug_var('tabs', $tabs);

  //create new tab for website integration; only attach to individuals
  $ctype = civicrm_api3('contact', 'getvalue', array('id' => $contactID, 'return' => 'contact_type'));
  if ($ctype == 'Individual') {
    /*$url_account = CRM_Utils_System::url( 'civicrm/nyss/web/account',
      "reset=1&snippet=1&force=1&cid=$contactID" );
    $tabs[] = array(
      'id' => 'nyss_web_account',
      'url' => $url_account,
      'title' => 'Website Account',
      'weight' => 500 );*/

    $url_message = CRM_Utils_System::url( 'civicrm/nyss/web/message',
      "reset=1&snippet=1&force=1&cid=$contactID" );
    $tabs[] = array(
      'id' => 'nyss_web_message',
      'url' => $url_message,
      'title' => 'Website Messages',
      'weight' => 500 );

    $url_tags = CRM_Utils_System::url( 'civicrm/nyss/web/tags',
      "reset=1&snippet=1&force=1&cid=$contactID" );
    $tabs[] = array(
      'id' => 'nyss_web_tags',
      'url' => $url_tags,
      'title' => 'Website Tags',
      'weight' => 500 );

    $url_activity = CRM_Utils_System::url( 'civicrm/nyss/web/activitystream',
      "reset=1&snippet=1&force=1&cid=$contactID" );
    $tabs[] = array(
      'id' => 'nyss_web_activitystream',
      'url' => $url_activity,
      'title' => 'Website Activity',
      'weight' => 500 );
  }

  //6698 reorder the tabs to insert mailings in a more appropriate order
  $newTabs = array();
  $weight = 10;

  $order = array(
    'activity',
    'case',
    'mailing',
    'rel',
    'group',
    'note',
    'tag',
    'custom_9',
    'nyss_web_account',
    'nyss_web_message',
    'nyss_web_tags',
    'nyss_web_activitystream',
    'log',
  );

  foreach ( $order as $id ) {
    foreach ( $tabs as $details ) {
      if ( $details['id'] == $id ) {
        $details['weight'] = $weight;
        $newTabs[] = $details;

        $weight += 10;
      }
    }
  }

  $tabs = $newTabs;
  //CRM_Core_Error::debug_var('$newTabs', $newTabs);
}

function nyss_contact_civicrm_alterTemplateFile($formName, &$form, $context, &$tplName) {
  //CRM_Core_Error::debug_var('alterTemplateFile $formName', $formName);
  //CRM_Core_Error::debug_var('alterTemplateFile $context', $context);
  //CRM_Core_Error::debug_var('alterTemplateFile $tplName', $tplName);
  //CRM_Core_Error::debug_var('alterTemplateFile $form', $form);

  //website profile tab
  if ($formName == 'CRM_Contact_Page_View_CustomData' &&
    $form->_groupId == 9
  ) {
    $tplName = 'CRM/NYSS/ContactWebsiteProfileTab.tpl';
  }
}//alterTemplateFile

function _getContactCustom(&$obj, $return = FALSE) {
  $contactId = CRM_Utils_Request::retrieve('cid', 'Positive');

  //look for contact id in object if not in $_REQUEST
  if ( empty($contactId) ) {
    $contactId = $obj->getVar('_contactId');
  }

  //return immediately if no contact ID available; see 7370
  if ( empty($contactId) ) {
    return;
  }

  $params = array(
    'version' => 3,
    'id' => $contactId,
  );
  $contact = civicrm_api('contact', 'getsingle', $params);

  //get all contact custom fields
  $params = array(
    'version' => 3,
    'rowCount' => 100,
  );
  $custFlds = civicrm_api('custom_field', 'get', $params);
  //CRM_Core_Error::debug_var('$custFlds', $custFlds);

  $params = array(
    'version' => 3,
    'entity_id' => $contactId,
    'rowCount' => 100,
  );
  $custom = civicrm_api('custom_value', 'get', $params);

  foreach ( $custom['values'] as $custID => $custVal ) {
    //if select/multi-select, we need to retrieve and set the label values
    if ( in_array($custFlds['values'][$custID]['html_type'], array('Select', 'Multi-Select')) ) {
      $params = array(
        'version' => 3,
        'option_group_id' => $custFlds['values'][$custID]['option_group_id'],
      );
      $opts = civicrm_api('option_value', 'get', $params);
      //CRM_Core_Error::debug_var('$opts', $opts);
      //CRM_Core_Error::debug_var('$custVal[latest]', $custVal['latest']);

      foreach ( $opts['values'] as $opt ) {
        if ( $custFlds['values'][$custID]['html_type'] == 'Multi-Select' ) {
          if ( in_array($opt['value'], $custVal['latest']) ) {
            //CRM_Core_Error::debug_var('$opts', $opts);
            //CRM_Core_Error::debug_var('$custVal', $custVal);
            $key = array_search($opt['value'], $custVal['latest']);
            $contact['custom_'.$custID][$key] = $opt['label'];
          }
        }
        else {
          if ( $custVal['latest'] == $opt['value'] ) {
            $contact['custom_'.$custID] = $opt['label'];
            break;
          }
        }
      }
    }
    else {
      $contact['custom_'.$custID] = $custVal['latest'];
    }
  }

  if ( $return ) {
    return $contact;
  }
  else {
    $obj->assign('contactDetails', $contact);
  }

  //CRM_Core_Error::debug_var('contactDetails', $contact);
}//_getContactCustom

function _getFldOpts($id) {
  $params = array(
    'version' => 3,
    'id' => $id,
  );
  $fld = civicrm_api('custom_field', 'get', $params);
  //CRM_Core_Error::debug_var('$fld', $fld);

  $params = array(
    'version' => 3,
    'option_group_id' => $fld['values'][$id]['option_group_id'],
  );
  $opts = civicrm_api('option_value', 'get', $params);
  //CRM_Core_Error::debug_var('$opts', $opts);

  //if select list, prepend -select-
  if ( $fld['values'][$id]['html_type'] == 'Select' ) {
    $optList = array('' => '- select -');
  }
  else {
    $optList = array();
  }

  foreach ( $opts['values'] as $opt ) {
    $optList[$opt['value']] = $opt['label'];
  }
  //CRM_Core_Error::debug_var('$optList', $optList);

  return $optList;
}//_getFldOpts

function _setCustomData($formName, $vals) {
  //CRM_Core_Error::debug_var('$vals',$vals);

  //construct map of form and custom field ids
  $formFlds = array(
    'CRM_Contact_Form_Inline_Demographics' => array(
      'custom_63' => 'text',
      'custom_45' => 'text',
      'custom_58' => 'multi',
      'custom_62' => 'text',
    ),
    'CRM_Contact_Form_Inline_CommunicationPreferences' => array(
      'custom_64' => 'text',
    ),
    'CRM_Contact_Form_Inline_ContactInfo' => array(
      'custom_60' => 'select',
      'custom_42' => 'select',
    ),
  );

  foreach ( $formFlds[$formName] as $fld => $type ) {
    //CRM_Core_Error::debug_var("vals[{$fld}]", $vals[$fld]);

    //if a multi field and not set, set to empty array
    if ( $type == 'multi' && !isset($vals[$fld]) ) {
      $vals[$fld] = array();
    }

    //set custom data
    if ( isset($vals[$fld]) ) {
      civicrm_api('contact', 'create', array(
        'version' => 3,
        'id' => $vals['cid'],
        $fld => $vals[$fld],
      ));
    }
  }
}//_setCustomData
