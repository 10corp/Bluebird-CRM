<?php

function nyss_dedupe_civicrm_dupeQuery ($o, $table, &$tableQueries){

    //don't run these during user account/contact creation
    if( $o->noRules || $table != 'table')
        return;

    $ruleMap = array(
        'Individual 1 (fname + mname + lname + suffix + street + postal)' => array(
            'internal' => 'nyss_dedupe_indiv1_internal',
            'record' => 'nyss_dedupe_indiv1_record'
        ),
        'Individual 2 (fname + lname + city + birth)' => array(
            'internal' => 'nyss_dedupe_indiv2_internal',
            'record' => '',
        ),
        'Individual 3 (street + lname + fname + city + suffix)' => array(
            'internal' => 'nyss_dedupe_indiv3_internal',
            'record' => ''
        ),
        'Individual 4 (fname + lname + email)' => array(
            'internal' => 'nyss_dedupe_indiv4_internal',
            'record' => ''
        ),
        'Individual 5 (email | street + lname)' => array(
            'internal' => '',
            'record' => 'nyss_dedupe_indiv5_record'
        ),
        'Individual Omis' => array(
            'internal' => 'nyss_dedupe_individual_omis_internal',
            'record' => 'nyss_dedupe_individual_omis_record',
        ),
        'Organization 1 (name + street + city + email)' => array(
            'internal' => 'nyss_dedupe_org1_internal',
            'record' => ''
        ),
        'Organization 2 (name + street + city + zip)' => array(
            'internal' => 'nyss_dedupe_org2_internal',
            'record' => ''
        ),
        'Organization 3 (name + street + city)' => array(
            'internal' => 'nyss_dedupe_org3_internal',
            'record' => ''
        ),
        'Household 1 (name + street + city + email)' => array(
            'internal' => 'nyss_dedupe_house1_internal',
            'record' => ''
        ),
        'Household 2 (name + street + city + zip)' => array(
            'internal' => 'nyss_dedupe_house2_internal',
            'record' => ''
        ),
        'Household 3 (name + street + city)' => array(
            'internal' => 'nyss_dedupe_house3_internal',
            'record' => ''
        )
    );

    $ruleName = $o->name;
    $ruleType = empty($o->params) ? 'internal' : 'record';

    // If its a rule that we've overridden
    if(array_key_exists($ruleName, $ruleMap) && $rule=$ruleMap[$ruleName][$ruleType]) {
        //Set some default override values, individual rule functions can override these
        $o->threshold = 5;
        // Build our customized query, allow override of $o values.
        $query = call_user_func($rule, $o);

        // For internal queries, make sure to respect the contactIds constraints
        // Also avoid mirror results, i.e. (1,2) and (2,1)
        // Verify that conact1._contact_id and contact2.contact_id are not the same as well.
        if($ruleType == 'internal') {
            if( !empty($o->contactIds) ) {
                $cids = implode(',',$o->contactIds);
                $query .= " AND contact1.contact_id IN($cids) AND ( contact2.contact_id NOT IN($cids) OR (contact2.contact_id IN($cids) AND contact1.contact_id < contact2.contact_id) )";
            } else {
                $query .= " AND contact1.contact_id < contact2.contact_id";
            }
        }

        // Wipe the query array clean and insert our customized query.
        foreach(array_keys($tableQueries) as $key)
            unset($tableQueries[$key]);

        // Set tableQueries
        $tableQueries['civicrm.custom.5'] = $query;
    }

    //CRM_Core_Error::debug($tableQueries);exit();
}

/*
 * individual rules
 * internal deduping
 */

function nyss_dedupe_indiv1_internal($o) {
    return "SELECT DISTINCT contact1.contact_id id1, contact2.contact_id id2, 5 weight
            FROM shadow_contact AS contact1
              JOIN fn_group_contact AS fn1 USING (contact_id)
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.last_name = contact2.last_name AND
                    IFNULL(contact1.middle_name,'') = IFNULL(contact2.middle_name,'') AND
                    IFNULL(contact1.suffix_id,0) = IFNULL(contact2.suffix_id,0) )
              JOIN fn_group_contact AS fn2 ON (
                    fn2.contact_id=contact2.contact_id AND
                    fn1.fn_group_id=fn2.fn_group_id)
              INNER JOIN shadow_address AS address1 ON contact1.contact_id=address1.contact_id
              INNER JOIN shadow_address AS address2 ON (
                    contact2.contact_id=address2.contact_id AND
                    address1.street_address=address2.street_address AND
                    address1.postal_code=address2.postal_code)
            WHERE contact1.contact_type = 'Individual'
              AND contact1.last_name IS NOT NULL
              AND contact1.first_name IS NOT NULL
              AND address1.postal_code IS NOT NULL
              AND address1.street_address IS NOT NULL";
}

function nyss_dedupe_indiv2_internal($o) {
    return "SELECT DISTINCT contact1.contact_id id1, contact2.contact_id id2, 5 weight
            FROM shadow_contact AS contact1
              JOIN fn_group_contact AS fn1 USING (contact_id)
              JOIN shadow_contact AS contact2 ON(
                    contact1.contact_type = contact2.contact_type AND
                    contact1.last_name = contact2.last_name AND
                    contact1.birth_date = contact2.birth_date)
              JOIN fn_group_contact AS fn2 ON (
                    fn2.contact_id=contact2.contact_id AND
                    fn1.fn_group_id=fn2.fn_group_id)
              INNER JOIN shadow_address AS address1 ON contact1.contact_id = address1.contact_id
              INNER JOIN shadow_address AS address2 ON (
                    contact2.contact_id = address2.contact_id AND
                    address1.city = address2.city)
            WHERE contact1.contact_type = 'Individual'
              AND contact1.last_name IS NOT NULL
              AND contact1.first_name IS NOT NULL
              AND contact1.birth_date IS NOT NULL
              AND address1.city IS NOT NULL
              ";
}

function nyss_dedupe_indiv3_internal($o) {
    return "SELECT DISTINCT contact1.contact_id id1, contact2.contact_id id2, 5 weight
            FROM shadow_contact AS contact1
              JOIN fn_group_contact AS fn1 USING (contact_id)
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.last_name = contact2.last_name AND
                    IFNULL(contact1.middle_name,'') = IFNULL(contact2.middle_name,'') AND
                    IFNULL(contact1.suffix_id,0) = IFNULL(contact2.suffix_id,0) )
              JOIN fn_group_contact AS fn2 ON (
                    fn2.contact_id=contact2.contact_id AND
                    fn1.fn_group_id=fn2.fn_group_id)
              INNER JOIN shadow_address AS address1 on contact1.contact_id=address1.contact_id
              INNER JOIN shadow_address AS address2 on contact2.contact_id=address2.contact_id AND
                    address1.street_address=address2.street_address AND
                    address1.city=address2.city
            WHERE contact1.contact_type = 'Individual'
              AND contact1.last_name IS NOT NULL
              AND contact1.first_name IS NOT NULL
              AND address1.street_address IS NOT NULL
              AND address1.city IS NOT NULL
              ";
}

function nyss_dedupe_indiv4_internal($o) {
    return "SELECT DISTINCT contact1.contact_id id1, contact2.contact_id id2, 5 weight
            FROM shadow_contact AS contact1
              JOIN fn_group_contact AS fn1 USING (contact_id)
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.last_name = contact2.last_name)
              JOIN fn_group_contact AS fn2 ON (
                    fn2.contact_id=contact2.contact_id AND
                    fn1.fn_group_id=fn2.fn_group_id)
              INNER JOIN civicrm_email AS email1 ON contact1.contact_id = email1.contact_id
              INNER JOIN civicrm_email AS email2 ON (
                    contact2.contact_id = email2.contact_id AND
                    email1.email = email2.email AND
                    email1.is_primary = email2.is_primary)
            WHERE contact1.contact_type = 'Individual'
              AND contact1.last_name IS NOT NULL
              AND contact1.first_name IS NOT NULL
              AND email1.email IS NOT NULL
              AND email1.email != ''
              AND email1.is_primary=1
              ";
}

/*
 * individual rules
 * record import
 */

function nyss_dedupe_indiv1_record($o) {
    $contact = $o->params['civicrm_contact'];
    $address =& $o->params['civicrm_address'];

    $where = "WHERE contact.contact_type = 'Individual'";

    foreach(array('last_name','middle_name') as $key) {
        if( array_key_exists($key, $contact) && $value=CRM_Core_DAO::escapeString($contact[$key]))
            $where .= " AND contact.$key = BB_NORMALIZE('$value')\n";
        else
            $where .= " AND contact.$key IS NULL\n";
    }

    if( array_key_exists('first_name', $contact) && $value=CRM_Core_DAO::escapeString($contact['first_name']))
        $where .= "AND fn.fn_group_id IN ( SELECT fn_group_id FROM fn_group_name WHERE name = BB_NORMALIZE('$value'));\n";

    if( array_key_exists('suffix_id', $contact) && $value=CRM_Core_DAO::escapeString($contact['suffix_id']))
        $where .= " AND contact.suffix_id = '$value'\n";
    else
        $where .= " AND contact.suffix_id IS NULL\n";

    if( array_key_exists('postal_code',$address) && $value=CRM_Core_DAO::escapeString($address['postal_code']))
        $where .= " AND address.postal_code = '$value'\n";
    else
        $where .= " AND address.postal_code IS NULL\n";

    if( array_key_exists('street_address',$address) && $value=CRM_Core_DAO::escapeString($address['street_address']))
        $where .= " AND address.street_address = BB_NORMALIZE_ADDR('$value')\n";
    else
        $where .= " AND address.street_address IS NULL";


    return "SELECT DISTINCT contact.contact_id id1, 10 weight
            FROM shadow_contact as contact
              INNER JOIN shadow_address as address on address.contact_id=contact.contact_id
            $where
            ";
}

function nyss_dedupe_indiv5_record($o) {
	require_once 'CRM/Core/DAO.php';

    $civicrm_contact = CRM_Utils_Array::value('civicrm_contact',$o->params,'');
    $civicrm_email = CRM_Utils_Array::value('civicrm_email',$o->params,'');
    $civicrm_address = CRM_Utils_Array::value('civicrm_address',$o->params,'');

    //We can't dedupe anything without a first and last name
    if( empty($civicrm_contact['first_name']) || empty($civicrm_contact['last_name']) )
        return;

    // If we have an email, match on fname + lname + email
    if ($email = CRM_Utils_Array::value('email',$civicrm_email,'')) {
        $tableQueries['civicrm_contact.email.5'] = CRM_Core_DAO::composeQuery(
               "SELECT DISTINCT contact.contact_id id1, 5 weight
                FROM shadow_contact as contact
                  JOIN civicrm_email as email on email.contact_id = contact.id
                WHERE contact.contact_type = 'Individual'
                  AND fn.fn_group_id IN ( SELECT fn_group_id
                                            FROM fn_group_name
                                            WHERE name = BB_NORMALIZE(%1))
                  AND contact.last_name = BB_NORMALIZE(%2)
                  AND email.email = %3
                  ", array(
                    1 => array($civicrm_contact['first_name'], 'String'),
                    2 => array($civicrm_contact['last_name'], 'String'),
                    3 => array($email, 'String')
            ));

    // If we have an address, match on fname + lname + street_address
    } elseif ($street_address = CRM_Utils_Array::value('street_address',$civicrm_address,'')) {
        $tableQueries['civicrm_contact.email.5'] = CRM_Core_DAO::composeQuery(
               "SELECT DISTINCT contact.contact_id id1, 5 weight
                FROM shadow_contact as contact
                  JOIN shadow_address as address on address.contact_id=contact.id
                WHERE contact.contact_type = 'Individual'
                  AND fn.fn_group_id IN ( SELECT fn_group_id
                                            FROM fn_group_name
                                            WHERE name = BB_NORMALIZE(%1))
                  AND contact.last_name = BB_NORMALIZE(%2)
                  AND address.street_address = BB_NORMALIZE_ADDR(%3)
                  ", array(
                        1 => array($civicrm_contact['first_name'], 'String'),
                        2 => array($civicrm_contact['last_name'], 'String'),
                        3 => array($street_address, 'String')
            ));

    // If we have no address or email, then we can't do a match
    } else
        return '';
}


/*
 * organization rules
 * internal deduping
 */

function nyss_dedupe_org1_internal($o) {
    //name + street + city + email
    return "SELECT DISTINCT contact1.contact_id AS id1, contact2.contact_id AS id2, 5 AS weight
            FROM shadow_contact AS contact1
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.organization_name = contact2.organization_name)
              INNER JOIN shadow_address address1 ON contact1.contact_id = address1.contact_id
              INNER JOIN shadow_address address2 ON (
                    contact2.contact_id = address2.contact_id AND
                    address1.street_address = address2.street_address AND
                    address1.city = address2.city)
              INNER JOIN civicrm_email email1 ON contact1.contact_id=email1.contact_id
              INNER JOIN civicrm_email email2 ON (
                    contact2.contact_id=email2.contact_id AND
                    email1.email=email2.email AND
                    email1.is_primary = email2.is_primary)
            WHERE contact1.contact_type = 'Organization'
              AND contact1.organization_name IS NOT NULL
              AND address1.street_address IS NOT NULL
              AND address1.city IS NOT NULL
              AND email1.email IS NOT NULL
              AND email1.email != ''
              ";
}

function nyss_dedupe_org2_internal($o) {
    //name + street + city + zip
    return "SELECT DISTINCT contact1.contact_id AS id1, contact2.contact_id AS id2, 5 AS weight
            FROM shadow_contact AS contact1
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.organization_name = contact2.organization_name)
              INNER JOIN shadow_address AS address1 ON contact1.contact_id=address1.contact_id
              INNER JOIN shadow_address AS address2 ON (
                    contact2.contact_id = address2.contact_id AND
                    address1.street_address = address2.street_address AND
                    address1.city = address2.city AND
                    address1.postal_code = address2.postal_code)
            WHERE contact1.contact_type = 'Organization'
              AND contact1.organization_name IS NOT NULL
              AND address1.street_address IS NOT NULL
              AND address1.city IS NOT NULL
              AND address1.postal_code IS NOT NULL
              ";
}

function nyss_dedupe_org3_internal($o) {
    //name + street + city
    return "SELECT DISTINCT contact1.contact_id AS id1, contact2.contact_id AS id2, 5 AS weight
            FROM shadow_contact contact1
              JOIN shadow_contact contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.organization_name = contact2.organization_name)
              INNER JOIN shadow_address address1 ON contact1.contact_id = address1.contact_id
              INNER JOIN shadow_address address2 ON (
                    contact2.contact_id = address2.contact_id AND
                    address1.street_address = address2.street_address AND
                    address1.city = address2.city)
            WHERE contact1.contact_type = 'Organization'
              AND contact1.organization_name IS NOT NULL
              AND address1.street_address IS NOT NULL
              AND address1.city IS NOT NULL
              ";
}


/*
 * household rules
 * internal deduping
 */

function nyss_dedupe_house1_internal($o) {
    //name + street + city + email
	return "SELECT DISTINCT contact1.contact_id AS id1, contact2.contact_id AS id2, 5 AS weight
            FROM shadow_contact AS contact1
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.household_name = contact2.household_name)
              INNER JOIN shadow_address AS address1 ON contact1.contact_id = address1.contact_id
              INNER JOIN shadow_address AS address2 ON (
                    contact2.contact_id = address2.contact_id AND
                    address1.street_address = address2.street_address AND
                    address1.city = address2.city)
              INNER JOIN civicrm_email AS email1 ON contact1.contact_id = email1.contact_id
              INNER JOIN civicrm_email AS email2 ON (
                    contact1.contact_id = email2.contact_id AND
                    email1.email = email2.email AND
                    email1.is_primary = email2.is_primary)
            WHERE contact1.contact_type = 'Household'
              AND contact1.household_name IS NOT NULL
              AND address1.street_address IS NOT NULL
              AND address1.city IS NOT NULL
              AND email1.is_primary = 1
              AND email1.email IS NOT NULL
              AND email1.email != ''
              ";
}

function nyss_dedupe_house2_internal($o) {
    //name + street + city + zip
	return "SELECT DISTINCT contact1.contact_id AS id1, contact2.contact_id AS id2, 5 AS weight
            FROM shadow_contact AS contact1
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.household_name = contact2.household_name)
              INNER JOIN civicrm_address address1 ON contact1.contact_id = address1.contact_id
              INNER JOIN civicrm_address address2 ON (
                    contact2.contact_id = address2.contact_id AND
                    address1.street_address = address2.street_address AND
                    address1.city = address2.city AND
                    address1.postal_code = address2.postal_code)
            WHERE contact1.contact_type = 'Household'
              AND contact1.household_name IS NOT NULL
              AND address1.street_address IS NOT NULL
              AND address1.postal_code IS NOT NULL
              AND address1.city IS NOT NULL
              ";
}

function nyss_dedupe_house3_internal($o) {
    //name + street + city
    return "SELECT DISTINCT contact1.contact_id AS id1, contact2.contact_id AS id2, 5 AS weight
            FROM shadow_contact AS contact1
              JOIN shadow_contact AS contact2 ON (
                    contact1.contact_type = contact2.contact_type AND
                    contact1.household_name = contact2.household_name)
              INNER JOIN shadow_address AS address1 ON contact1.contact_id = address1.contact_id
              INNER JOIN shadow_address AS address2 ON (
                    contact2.contact_id = address2.contact_id AND
                    address1.street_address = address2.street_address AND
                    address1.city = address2.city)
            WHERE contact1.contact_type = 'Household'
              AND contact1.household_name IS NOT NULL
              AND address1.street_address IS NOT NULL
              AND address1.city IS NOT NULL
              ";
}

function nyss_dedupe_fuzzy_address_internal($o, $table, &$tableQueries) {
    //now set custom query; make sure weight matches what is configured in system
    $tableQueries['civicrm.street_address.5'] = "
        SELECT contact1.contact_id id1, contact2.contact_id id2, 5 weight
        FROM shadow_contact as contact1
          JOIN shadow_contact as contact2 ON (
                contact1.first_name = contact2.first_name AND
                contact1.last_name = contact2.last_name AND
                IFNULL(contact1.middle_name,'') = IFNULL(contact2.middle_name,'') AND
                IFNULL(contact1.suffix_id,0) = IFNULL(contact2.suffix_id,0) )
          INNER JOIN shadow_address address1 on contact1.contact_id=address1.contact_id
          INNER JOIN shadow_address address2 on contact2.contact_id=address2.contact_id AND
                address1.postal_code=address2.postal_code
        WHERE contact1.contact_type = 'Individual'
          AND contact2.contact_type = 'Individual'
          AND contact1.contact_id <> contact2.contact_id
          AND contact1.last_name IS NOT NULL
          AND contact1.first_name IS NOT NULL
          AND address1.postal_code IS NOT NULL
          ";

    if( !empty($o->contactIds) )
          $tableQueries['civicrm.street_address.5'] .= " AND contact1.contact_id in (".implode(', ',$o->contactIds).")";

    //echo "<pre>{$tableQueries['civicrm.street_address.5']}</pre>"; exit();
}

function nyss_dedupe_fuzzy_address_record($o, $table, &$tableQueries) {
    $where = "WHERE contact.contact_type = 'Individual'\n";
    $contact = $o->params['civicrm_contact'];
    $address = $o->params['civicrm_address'];

    foreach(array('last_name','first_name','middle_name') as $key) {
        if( array_key_exists($key, $contact) && $value=CRM_Core_DAO::escapeString($contact[$key]))
            $where .= " AND contact.$key = BB_NORMALIZE('$value')\n";
        else
            $where .= " AND contact.$key IS NULL\n";
    }

    if( array_key_exists('suffix_id', $contact) && $value=CRM_Core_DAO::escapeString($contact['suffix_id']))
        $where .= " AND contact.suffix_id = '$value'\n";
    else
        $where .= " AND contact.suffix_id IS NULL\n";

    if( array_key_exists('postal_code',$address) && $value=CRM_Core_DAO::escapeString($address['postal_code']))
        $where .= " AND address.postal_code = '$value'\n";
    else
        $where .= " AND address.postal_code IS NULL\n";

    $tableQueries['civicrm.street_address.5'] = "
        SELECT DISTINCT contact.contact_id id1, 10 weight
        FROM shadow_contact as contact
            INNER JOIN shadow_address address on address.contact_id=contact.contact_id
        $where
        ";

    // echo "<pre>{$tableQueries['civicrm.street_address.5']}</pre>"; exit();
}

function nyss_dedupe_individual_omis_internal($o) {
    return "
        SELECT DISTINCT contact1.contact_id id1, contact2.contact_id id2, 5 weight
        FROM shadow_contact AS contact1
          JOIN fn_group_contact AS fn1 ON fn1.contact_id=contact1.contact_id
          JOIN shadow_contact AS contact2 ON (
            contact1.last_name = contact2.last_name AND
            contact1.contact_type = contact2.contact_type)
          JOIN fn_group_contact AS fn2 ON (
            fn2.contact_id=contact2.contact_id AND
            fn1.fn_group_id=fn2.fn_group_id)
          JOIN shadow_address AS address1 ON address1.contact_id = contact1.contact_id
          JOIN shadow_address AS address2 ON (
            address2.contact_id =  contact2.contact_id AND
            address2.street_address = address1.street_address)
        WHERE contact1.contact_type = 'Individual'
          AND (contact1.suffix_id IS NULL OR contact2.suffix_id IS NULL OR contact1.suffix_id = contact2.suffix_id)
          AND (contact1.middle_name IS NULL OR contact2.middle_name IS NULL OR contact1.middle_name = contact2.middle_name)
          AND (contact1.birth_date IS NULL OR contact2.birth_date IS NULL OR contact1.birth_date = contact2.birth_date)
          ";
}

function nyss_dedupe_individual_omis_record($o) {
    $civicrm_contact = CRM_Utils_Array::value('civicrm_contact',$o->params);
    $civicrm_address = CRM_Utils_Array::value('civicrm_address',$o->params);

    // Since definitely have first and last name, escape them upfront.
    $first_name = CRM_Core_DAO::escapeString($civicrm_contact['first_name']);
    $last_name = CRM_Core_DAO::escapeString($civicrm_contact['last_name']);
    $street_address = CRM_Core_DAO::escapeString($civicrm_address['street_address']);

    $query = "
        SELECT DISTINCT contact1.contact_id id1, 5 weight
        FROM shadow_contact AS contact1
          JOIN shadow_address AS address1 USING(contact_id)
          JOIN fn_group_contact as fn USING (contact_id)

        WHERE contact1.contact_type = 'Individual'
          AND fn.fn_group_id IN ( SELECT fn_group_id
                                    FROM fn_group_name
                                    WHERE name = BB_NORMALIZE($first_name))
          AND contact1.last_name = BB_NORMALIZE('$last_name')
          AND address1.street_address = BB_NORMALIZE_ADDR('$street_address')
          ";

    if($birth_date = CRM_Core_DAO::escapeString($civicrm_contact['birth_date']))
        $query .= " AND (contact1.birth_date IS NULL or contact1.birth_date = '$birth_date')\n";

    if($suffix_id = CRM_Core_DAO::escapeString($civicrm_contact['suffix_id']))
        $query .= " AND (contact1.suffix_id IS NULL or contact1.suffix_id = $suffix_id)\n";

    if($middle_name = CRM_Core_DAO::escapeString($civicrm_contact['middle_name']))
        $query .= " AND (contact1.middle_name IS NULL or contact1.middle_name = '$middle_name')\n";

    return $query;
}
