<?php 
function nyss_export_civicrm_export( $exportTempTable, $headerRows, $sqlColumns, $exportMode ) {
	//CRM_Core_Error::debug($_POST); 
	//CRM_Core_Error::debug($headerRows);
	//CRM_Core_Error::debug($sqlColumns); exit();
	
	//field exclusions; only implement for primary export option
	if ( $_POST['exportOption'] == 1 ) {
		$headerRemove = array( 'Signature Text',
		                       'Signature Html',
							   'Contact Subtype',
							   'Current Employer ID',
							   'Geo Code 1',
							   'Geo Code 2',
							   'Address Name',
							   'Master Address Belongs To',
							   'County',
							   'World Region',
							   'Im Service Provider',
							   'Group(s)',
							   'Tag(s)',
							   'Note(s)',
							   'Contact Hash',
							   'Image Url'
							 );
		foreach ( $headerRows as $key => $headerRow ) {
			if ( in_array( $headerRow, $headerRemove ) ) {
				unset( $headerRows[$key] );
			}
		}
		
		//4308 alter preferred mail header
		$pmf = array_search( 'Preferred Mail Format', $headerRows);
		$headerRows[$pmf] = 'Preferred Email Format';
	
		$sqlRemove = array( 'signature_text',
		                    'signature_html',
							'contact_sub_type',
							'current_employer_id',
							'geo_code_1',
							'geo_code_2',
							'address_name',
							'master_id',
							'county',
							'world_region',
							'provider_id',
							'groups',
							'tags',
							'notes',
							'hash',
							'image_url'
						  );
		foreach ( $sqlRemove as $sqlField ) {
			unset( $sqlColumns[$sqlField] );
		}
	} //end primary export exclusions
	
	//3665 mailing exclusions option
    if ( $_POST['postal_mailing_export']['postal_mailing_export'] == 1 && 
	     in_array( 'Last Name', $headerRows ) && 
		 in_array( 'Contact Type', $headerRows ) ) {
        // exclude contacts where last_name is empty 
        $query = "
DELETE FROM $exportTempTable
WHERE contact_type = 'Individual' AND ( last_name = '' OR last_name IS NULL )";
        CRM_Core_DAO::executeQuery( $query );
    }
	
	//4175 exclude Email Only group
	if ( $_POST['postal_mailing_export']['postal_mailing_export'] == 1 ) {
		$gid = CRM_Core_DAO::singleValueQuery( "SELECT id FROM civicrm_group WHERE name LIKE 'Email_Only';" );
		if ( $gid ) { //continue if group found
			$query = "
DELETE exp
FROM $exportTempTable AS exp
LEFT JOIN civicrm_group_contact gc ON ( gc.contact_id = exp.civicrm_primary_id AND gc.status = 'Added' )
WHERE gc.group_id = $gid;";
            CRM_Core_DAO::executeQuery( $query );
		}
	}

    //3665 code copied from CRM_Export_BAO_Export::writeCSVFromTable, just to modify the order clause
    $writeHeader = true;
    $offset = 0;
    $limit  = 100;
    
	//only apply special sort if using primary export, as we know the necessary fields will exist
	if ( $_POST['exportOption'] == 1 ) { 
    	$query = "
SELECT *
FROM   $exportTempTable
ORDER BY CASE WHEN $exportTempTable.contact_type='Individual' THEN 1 
              WHEN $exportTempTable.contact_type='Household'  THEN 2 ELSE 3 END, 
         CASE WHEN $exportTempTable.gender='Male'   THEN 1  
              WHEN $exportTempTable.gender='Female' THEN 2 
              WHEN $exportTempTable.gender='Other'  THEN 3 ELSE 999 END,
         IFNULL($exportTempTable.birth_date, '9999-01-01')
";
	} else {
		$query = "
SELECT *
FROM   $exportTempTable
";
	}
	
    require_once 'CRM/Core/Report/Excel.php';
    require_once 'CRM/Export/BAO/Export.php';
    while ( 1 ) {
        $limitQuery = $query . "
LIMIT $offset, $limit
";
        $dao = CRM_Core_DAO::executeQuery( $limitQuery );
        
        if ( $dao->N <= 0 ) {
            break;
        }
        
        $componentDetails = array( );
        while ( $dao->fetch( ) ) {
            $row = array( );
            
            foreach ( $sqlColumns as $column => $dontCare ) {
                $row[$column] = $dao->$column;
            }
            
            $componentDetails[] = $row;
        }
        CRM_Core_Report_Excel::writeCSVFile( CRM_Export_BAO_Export::getExportFileName( 'csv', $exportMode ), 
                                             $headerRows, $componentDetails, null, $writeHeader );
        $writeHeader = false;
        $offset += $limit;
    }
    
    CRM_Utils_System::civiExit( );
	
	//debug
	/*CRM_Core_Error::debug('tt', $exportTempTable);
	CRM_Core_Error::debug('hr', $headerRows);
	CRM_Core_Error::debug('sc', $sqlColumns);
	CRM_Core_Error::debug('em', $exportMode);
	exit();*/
	
	//continue with the export
	/*require_once 'CRM/Export/BAO/Export.php';
	CRM_Export_BAO_Export::writeCSVFromTable( $exportTempTable, $headerRows, $sqlColumns, $exportMode );
	CRM_Utils_System::civiExit( );*/

}
