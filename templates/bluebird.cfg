;
; BluebirdCRM configuration
;
; Project: BluebirdCRM
; Author: Ken Zalewski
; Organization: New York State Senate
; Date: 2010-10-13
; Revised: 2012-02-06
;
; This is a sample configuration file, used to illustrate the various
; configuration parameters that can be used to control the setup and
; maintenance of the BluebirdCRM application.
;
; It will NOT work as is.
;
; Note: Double-quotes must be used around any values that contain special
;       characters.
;


; The [globals] section contains settings that apply to all CRM instances
; within this Bluebird installation.

[globals]
; xhprof configuration
;   profile = 0 or 1 to enable/disable profiling, default disabled
;   memory = 0 or 1 to enable/disable memory profiling, default disabled 
;   cpu = 0 or 1 to enable/disable memory profiling, default disabled
;   builtins = 0 or 1 to enable/disable profiling of builtins, default enabled
;   ignore[] = 'func_name' to ignore specific functions in profiling. Still 
;                   profiles the function's subtree as per normal.
;
; NOTE: www/xhprof requires graphviz to generate callgraphs.
xhprof.profile=1
xhprof.memory=1
xhprof.cpu=0
xhprof.builtins=0
xhprof.ignore[]='eval'
xhprof.ignore[]='call_user_func'
xhprof.ignore[]='call_user_func_array'

; nyss_io configuration
;   log_path = Path to directory to store the importData logs
nyss_io.log_path=ABS_PATH

; global database settings
db.host = DBSERVER
db.user = DBUSER
db.pass = DBPASS
db.civicrm.prefix = senate_c_
db.drupal.prefix = senate_d_
db.log.prefix = senate_l_
; global http settings
http.user = HTTPUSER
http.pass = HTTPPASS
; global path settings
app.rootdir = /opt/bluebird
data.rootdir = /var/bluebird
drupal.rootdir = /opt/bluebird/drupal
import.rootdir = /var/bluebird/importData
; CRON backup host is of the form [user@]hostname
backup.cron.host = BACKUPSERVER
backup.cron.rootdir = /crmbackups
; Bluebird interface backup directory
backup.ui.dirname = nyss_backup
; global host settings
base.domain =
; global file ownership settings
app.rootdir.owner = bluebird:bluebird
app.rootdir.perms = "u+rw,g+r-w,o-rw"
data.rootdir.owner = www-data:bluebird
data.rootdir.perms = "u+rw,g+r-w,o="
import.rootdir.owner = root:bluebird
; global cache settings
cache.apc = 1
cache.arraycache = 1
cache.memcache = 0
; global SAGE settings
sage.api.key = APIKEY
sage.api.base = http://sage.nysenate.gov/api/
; global LDAP settings
ldap.entries = CRMAnalytics, CRMAdministrator, CRMOfficeAdministrator, CRMOfficeDataEntry, CRMOfficeManager, CRMOfficeStaff, CRMOfficeVolunteer, CRMPrintProduction, CRMSOS
ldap.groups = CRMAnalytics, CRMAdministrator, CRMPrintProduction, CRMSOS
ldap.mappings = CRMAnalytics|Analytics User, CRMAdministrator|Administrator, CRMOfficeAdministrator|Office Administrator, CRMOfficeDataEntry|Data Entry, CRMOfficeManager|Office Manager, CRMOfficeStaff|Staff, CRMOfficeVolunteer|Volunteer, CRMPrintProduction|Print Production, CRMSOS|SOS, CRMDConferenceServices|Conference Services, CRMRConferenceServices|Conference Services
; global SMTP settings
smtp.host = smtp.sendgrid.net
smtp.port = 587
smtp.auth = 1
smtp.user = SMTPUSER
smtp.pass = SMTPPASS
smtp.domain = nysenate.gov
; global Sendgrid Stats Accumulator settings
accumulator.db.host = sendgrid.nysenate.gov
accumulator.db.port = 3306
accumulator.db.name = sendgridstats
accumulator.db.user = ACCUMUSER
accumulator.db.pass = ACCUMPASS
; global Web Signups settings
; The database connection information for Web Signups
signups.db.host = DBSERVER
signups.db.port = DBPORT
signups.db.name = signups
signups.db.user = DBUSER
signups.db.pass = DBPASS
; The domain and key for the NYSenate.gov xmlrpc API
signups.api.domain = civicrm.nysenate.gov
signups.api.key = APIKEY
; Web Signups reports parameters.
signups.reports.dirname = nyss_signups
signups.reports.date_format = Ymd
signups.reports.name_template = signups_<instance>_<date>.xls
; SMTP message headers for signups reports.
; Use these parameters to specifiy the From:, To:, and BCC: headers.
; Note that "@nysenate.gov" (via smtp.domain) is implied if there is no domain
; portion, and that commas are used to separate multiple e-mail addresses.
; SMTP connection settings come from the smtp.* parameters above.
signups.email.from = "NYSenate Signups Auto Sender" <no-reply-signups@nysenate.gov>
; If signups.email.to is not set, then senator.email is used instead.
signups.email.to = zalewski, biernack, kim
signups.email.bcc = bluebird.admin@nysenate.gov
; other global configuration parameters
search.include_email_in_name = 0
search.include_wildcard_in_name = 0

; The [instance_sets] section contains aliases for groups of CRM instances.
; Its use has become deprecated as Bluebird has come online in production.
; However, the LOCKED instance set is important.

[instance_sets]
civimail = sd99 civimail example
signups = sd99 example
rollout = sd99 krueger mcdonald oppenheimer
sandboxes = example dhill kenz kims sacha
training = training1 training2 training3 training4
; The LOCKED instance set is a special set.  Any instances in this set will
; be skipped by the bluebird_setup.sh script.
LOCKED = krueger mcdonald oppenheimer

; Each CRM instance should have its own section.
; The name must begin with "instance:", as shown below.

[instance:template]
db.basename = template
datasets =
ldap.groups =
ldap.user =
ldap.pass =

[instance:sd99]
district = 99
db.basename = sd99
datasets = sd99
ldap.groups = SenatorTest
; imap.accounts is a comma-separated list of IMAP accounts to check for
; inbound e-mail, where each account is of the form:  username|password
imap.accounts = "crmsd99|password"
; Global parameters can be overridden on a per-instance basis:
db.host = anotherDBHost.nysenate.gov
db.pass = anotherPassword
smtp.subuser = SMTPSUBUSER
smtp.subpass = SMTPSUBPASS
senator.name.formal = "Senator Test District"
; senator.email is used for both sending blast e-mails (as the From address)
; and for sending web signup reports (as the To address)
senator.email = "SenatorTest@nysenate.gov"
; If senator.email.replyto is not set, then senator.email is used as the
; Reply-To address.
senator.email.replyto = "do_not_reply@nysenate.gov"
; email.filter.district values:
; 0 | all = do not restrict contacts by district
; 1 | strict = include in-district contacts only
; 2 | fuzzy = include in-district plus unknown-district contacts
email.filter.district = 0
; or  email.filter.district = all
; If signups.email.to is not set, then senator.email is used instead.
signups.email.to = zalewski, crm.sd99@nysenate.gov

[instance:krueger]
district = 26
db.basename = krueger
;datasets = sd26,sd26ext
datasets = sd26all
ldap.groups = SenatorKrueger
imap.accounts = crmkrueger
senator.name.formal = "Senator Liz Krueger"
senator.email = "krueger@nysenate.gov"

[instance:mcdonald]
district = 43
db.basename = mcdonald
datasets = sd43
ldap.groups = SenatorMcDonald
imap.accounts = crmmcdonald
senator.name.formal = "Senator McDonald"

[instance:oppenheimer]
district = 37
db.basename = oppenheimer
datasets = sd37,sd37ext
ldap.groups = SenatorOppenheimer
imap.accounts = crmoppenheimer

[instance:training1]
district = 99
db.basename = training1
datasets = sd99
ldap.groups = SenatorTraining
imap.accounts = "crmsd99|pass"

[instance:training2]
district = 99
db.basename = training2
datasets = sd99
ldap.groups = SenatorTraining
imap.accounts = crmsd99

[instance:example]
district = 99
db.basename = example
datasets = sd99
ldap.groups = SenatorTest
imap.accounts = crmsd99
