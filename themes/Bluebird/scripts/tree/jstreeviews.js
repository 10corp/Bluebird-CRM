// Generated by CoffeeScript 1.6.2
(function() {
  var BBTagLabel, treeParse, _base, _ref,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  if ((_ref = (_base = window.jstree)['views']) == null) {
    _base['views'] = {
      writeTree: function() {}
    };
  }

  treeParse = (function() {
    function treeParse(instance) {
      var _this = this;

      this.tagLvl = 0;
      cj.each(_treeData.rawData, function(i, tID) {
        var _ref1;

        if (_ref1 = parseFloat(i), __indexOf.call(instance.get('dataSettings').pullSets, _ref1) >= 0) {
          _this.output = '';
          return _this.treeTop = i;
        }
      });
    }

    treeParse.prototype.isItemMarked = function(value, type) {
      if (value(true)) {
        return type;
      } else {
        return '';
      }
    };

    treeParse.prototype.isItemChildless = function(childLength) {
      if (childLength > 0) {
        return 'treeButton';
      } else {
        return '';
      }
    };

    treeParse.prototype.writeTreeInit = function(i, tID) {
      var tagName;

      tagName = new BBTagLabel(i);
      console.log(tagName.add());
      this.output += "<dl class='lv-" + this.tagLvl + "' id='" + (tagName.addDD()) + "'>";
      this.output += "<dt class='lv-" + this.tagLvl + " issueCode-" + i + "' id='" + (tagName.add()) + "' data-tagid='" + this.treeTop + "'>";
      this.output += "<div class='tag'><span class='name'>" + i + "</span></div>";
      this.output += "</dt>";
      return console.log(this.output);
    };

    return treeParse;

  })();

  BBTagLabel = (function() {
    function BBTagLabel(tagID) {
      this.tagID = tagID;
    }

    BBTagLabel.prototype.add = function() {
      return "tagLabel_" + this.tagID;
    };

    BBTagLabel.prototype.remove = function() {
      return this.tagID.replace("tagLabel_", "");
    };

    BBTagLabel.prototype.addDD = function() {
      return "tagDropdown_" + this.tagID;
    };

    BBTagLabel.prototype.removeDD = function() {
      return this.tagID.replace("tagDropdown_", "");
    };

    return BBTagLabel;

  })();

}).call(this);
