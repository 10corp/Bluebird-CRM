// Generated by CoffeeScript 1.6.3
var OpenLeg;

OpenLeg = (function() {
  var ajaxStructure, queryDefaults;

  function OpenLeg() {}

  OpenLeg.prototype.query = function(args, callback) {
    var page, term, year;
    this.callback = callback;
    if (!((args.term != null) || args.term.length >= 3)) {
      return false;
    }
    term = args.term;
    year = args.year;
    page = args.page || 1;
    return this.buildQuery(term, year, page);
  };

  OpenLeg.prototype.buildQuery = function(term, year) {
    var fOType, fOid, fTerm, fText, fYear;
    fTerm = "(" + term + "~ OR " + term + "*)";
    fOType = "(otype:" + queryDefaults.otype + ")";
    fYear = "(year:" + (this.getCurrentSessionYear(year)) + ")";
    fText = "(full:" + term + "~ OR full:" + term + "*)";
    fOid = "(oid:" + queryDefaults.oid + ")";
    ajaxStructure.jsonpCallback = "bb_" + term;
    ajaxStructure.data.term = "" + fTerm + " AND " + fOType + " AND " + fYear + " AND " + fText + " NOT " + fOid;
    return this.getQuery();
  };

  OpenLeg.prototype.getCurrentSessionYear = function(year) {
    var dateobject;
    if ((year != null) || isNaN(parseInt(year))) {
      dateobject = new Date();
      year = dateobject.getFullYear();
    }
    if (year % 2 === 0) {
      year = parseInt(year) - 1;
    }
    return year;
  };

  OpenLeg.prototype.getQuery = function() {
    var get,
      _this = this;
    get = cj.ajax(ajaxStructure);
    return get.done(function(data) {
      return _this.callback(_this.ripApartQueryData(data.response.metadata, data.response.results));
    });
  };

  OpenLeg.prototype.ripApartQueryData = function(metadata, results) {
    var index, pagesLeft, result, returnStructure, rs, _i, _len;
    pagesLeft = Math.floor((metadata.totalresults - results.length) / ajaxStructure.data.pageSize) - ajaxStructure.data.pageIdx;
    returnStructure = {
      seeXmore: metadata.totalresults - results.length,
      page: ajaxStructure.data.pageIdx,
      pagesLeft: pagesLeft,
      results: []
    };
    for (index = _i = 0, _len = results.length; _i < _len; index = ++_i) {
      result = results[index];
      rs = {
        noname: "" + result.oid + " - (" + result.data.bill.sponsor.fullname + ")",
        forname: "" + result.oid + " - for (" + result.data.bill.sponsor.fullname + ")",
        againstname: "" + result.oid + " - against (" + result.data.bill.sponsor.fullname + ")",
        description: "" + result.data.bill.title,
        url: result.data.bill.url
      };
      returnStructure.results.push(rs);
    }
    return returnStructure;
  };

  queryDefaults = {
    otype: 'bill',
    oid: 'A*',
    sort: 'modified',
    sortOrder: false
  };

  ajaxStructure = {
    url: 'http://open.nysenate.gov/legislation/2.0/search.jsonp',
    crossDomain: true,
    dataType: "jsonp",
    cache: true,
    data: {
      term: '',
      pageSize: 10,
      pageIdx: 1
    }
  };

  return OpenLeg;

})();
